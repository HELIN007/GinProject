basePath: /api/v1
definitions:
  model.Error:
    properties:
      msg:
        description: 返回信息
        type: string
      status:
        description: 返回错误码
        type: integer
    type: object
  model.Success:
    properties:
      data:
        description: 返回数据
      msg:
        description: 返回信息
        type: string
      status:
        description: 返回成功码
        example: 200
        type: integer
    type: object
  model.Token:
    properties:
      token:
        description: token
        type: string
    type: object
  model.UserInfo:
    properties:
      password:
        description: 密码
        type: string
      role:
        description: 权限码1：管理员；2：普通用户
        type: integer
      username:
        description: 用户名
        type: string
    type: object
  model.UserLogin:
    properties:
      password:
        description: 密码
        type: string
      username:
        description: 用户名
        type: string
    type: object
  v1.ResponseError:
    properties:
      msg:
        example: Error
        type: string
      status:
        example: 500
        type: integer
    type: object
  v1.ResponseUser:
    properties:
      msg:
        example: OK
        type: string
      status:
        example: 200
        type: integer
    type: object
host: localhost:2333
info:
  contact:
    email: 942801422@qq.com
    name: API Support
    url: http://www.swagger.io/support
  description: Gin博客接口文档
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Gin Blog API v1
  version: "1.0"
paths:
  /article/info/{id}:
    get:
      description: 查询单个文章接口
      parameters:
      - default: 1
        description: 文章编号
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: 查询文章成功
          schema:
            $ref: '#/definitions/v1.ResponseUser'
        "400":
          description: 查询文章失败
          schema:
            $ref: '#/definitions/v1.ResponseError'
      summary: 查询单个文章
      tags:
      - 文章接口
  /login:
    post:
      consumes:
      - application/json
      description: 用户登录，需要账号、密码
      parameters:
      - description: 用户登录
        in: body
        name: userinfo
        required: true
        schema:
          $ref: '#/definitions/model.UserLogin'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/model.Success'
            - properties:
                data:
                  $ref: '#/definitions/model.Token'
              type: object
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.Error'
      summary: 用户登录
      tags:
      - 用户接口
  /user/{id}:
    delete:
      consumes:
      - application/json
      description: 通过用户ID删除用户（管理员有此权限）
      parameters:
      - description: 用户ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"status":200, "msg":"删除用户成功"}'
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.Error'
      security:
      - ApiKeyAuth: []
      summary: 删除用户
      tags:
      - 用户接口
  /user/add:
    post:
      consumes:
      - application/json
      description: 新增用户，需要账号、密码、权限码
      parameters:
      - description: 用户信息
        in: body
        name: userinfo
        required: true
        schema:
          $ref: '#/definitions/model.UserInfo'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/model.Success'
            - properties:
                data:
                  $ref: '#/definitions/model.UserInfo'
              type: object
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.Error'
      summary: 新增用户
      tags:
      - 用户接口
swagger: "2.0"
